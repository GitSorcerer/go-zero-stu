// Code generated by goctl. DO NOT EDIT!
// Source: userOrder.proto

package server

import (
	"context"

	"github.com/GitSorcerer/go-zero-stu/grpc-db/internal/logic"
	"github.com/GitSorcerer/go-zero-stu/grpc-db/internal/svc"
	"github.com/GitSorcerer/go-zero-stu/grpc-db/pb"
)

type UserOrderServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserOrderServer
}

func NewUserOrderServer(svcCtx *svc.ServiceContext) *UserOrderServer {
	return &UserOrderServer{
		svcCtx: svcCtx,
	}
}

// -----------------------order-----------------------
func (s *UserOrderServer) AddOrder(ctx context.Context, in *pb.AddOrderReq) (*pb.AddOrderResp, error) {
	l := logic.NewAddOrderLogic(ctx, s.svcCtx)
	return l.AddOrder(in)
}

func (s *UserOrderServer) UpdateOrder(ctx context.Context, in *pb.UpdateOrderReq) (*pb.UpdateOrderResp, error) {
	l := logic.NewUpdateOrderLogic(ctx, s.svcCtx)
	return l.UpdateOrder(in)
}

func (s *UserOrderServer) DelOrder(ctx context.Context, in *pb.DelOrderReq) (*pb.DelOrderResp, error) {
	l := logic.NewDelOrderLogic(ctx, s.svcCtx)
	return l.DelOrder(in)
}

func (s *UserOrderServer) GetOrderById(ctx context.Context, in *pb.GetOrderByIdReq) (*pb.GetOrderByIdResp, error) {
	l := logic.NewGetOrderByIdLogic(ctx, s.svcCtx)
	return l.GetOrderById(in)
}

func (s *UserOrderServer) SearchOrder(ctx context.Context, in *pb.SearchOrderReq) (*pb.SearchOrderResp, error) {
	l := logic.NewSearchOrderLogic(ctx, s.svcCtx)
	return l.SearchOrder(in)
}

// -----------------------user-----------------------
func (s *UserOrderServer) AddUser(ctx context.Context, in *pb.AddUserReq) (*pb.AddUserResp, error) {
	l := logic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

func (s *UserOrderServer) UpdateUser(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UserOrderServer) DelUser(ctx context.Context, in *pb.DelUserReq) (*pb.DelUserResp, error) {
	l := logic.NewDelUserLogic(ctx, s.svcCtx)
	return l.DelUser(in)
}

func (s *UserOrderServer) GetUserById(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UserOrderServer) SearchUser(ctx context.Context, in *pb.SearchUserReq) (*pb.SearchUserResp, error) {
	l := logic.NewSearchUserLogic(ctx, s.svcCtx)
	return l.SearchUser(in)
}
